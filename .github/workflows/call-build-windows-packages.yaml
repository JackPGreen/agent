---
name: Build Windows packages
on:
  workflow_call:
    inputs:
      ref:
        description: The commit, tag or branch of Fluent Bit to checkout for building that creates the version above.
        type: string
        required: true
      nightly-build-info:
        description: Any special information to add to the nightly build information string.
        required: false
        type: string
        default: ""
jobs:
  call-build-windows-package:
    runs-on: windows-2025
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "Windows 64bit"
            arch: x64
            cmake_additional_opt: ""
            vcpkg_triplet: x64-windows-static
            cmake_version: "3.31.6"
    permissions:
      contents: read
    # Default environment variables can be overridden below. To prevent library pollution - without this other random libraries may be found on the path leading to failures.
    env:
      PATH: C:\ProgramData\Chocolatey\bin;c:/Program Files/Git/cmd;c:/Windows/system32;C:/Windows/System32/WindowsPowerShell/v1.0;$ENV:WIX/bin;C:/Program Files/CMake/bin;C:\vcpkg;
      VCPKG_BUILD_TYPE: release
      VCPKG_LIBRARY_LINKAGE: static
    steps:
      - name: Checkout ${{ inputs.ref }} code
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.ref }}
          repository: FluentDo/agent

      - name: Get dependencies
        run: |
          Invoke-WebRequest -OutFile winflexbison.zip $env:WINFLEXBISON
          Expand-Archive winflexbison.zip -Destination C:\WinFlexBison
          Copy-Item -Path C:\WinFlexBison/win_bison.exe C:\WinFlexBison/bison.exe
          Copy-Item -Path C:\WinFlexBison/win_flex.exe C:\WinFlexBison/flex.exe
          echo "C:\WinFlexBison" | Out-File -FilePath $env:GITHUB_PATH -Append
          choco install cmake --version "${{ matrix.config.cmake_version }}" --force
        env:
          WINFLEXBISON: https://github.com/lexxmark/winflexbison/releases/download/v2.5.22/win_flex_bison-2.5.22.zip
        shell: pwsh

      - name: Set up with Developer Command Prompt for Microsoft Visual C++
        # Note this messes with VCPKG_ROOT incorrectly hence the use of explicit pathing to vcpkg later
        # https://github.com/actions/runner-images/issues/9269#issuecomment-1921607066
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.config.arch }}

      - name: Get gzip command and nsis w/ chocolatey
        uses: crazy-max/ghaction-chocolatey@v3
        with:
          args: install gzip nsis -y

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Ensure we have the build directory
        run: |
          mkdir source\build
        shell: cmd

      - name: Restore cached packages of vcpkg
        id: cache-vcpkg-sources
        uses: actions/cache/restore@v4
        with:
          path: |
            C:\vcpkg\installed
          key: ${{ runner.os }}-${{ matrix.config.arch }}-vcpkg-installed-${{ steps.get-date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.config.arch }}-vcpkg-installed-
          enableCrossOsArchive: false

      - name: Build openssl with vcpkg
        run: |
          C:\vcpkg\vcpkg install --recurse openssl --triplet ${{ matrix.config.vcpkg_triplet }}
        shell: cmd

      - name: Build libyaml with vcpkg
        run: |
          C:\vcpkg\vcpkg install --recurse libyaml --triplet ${{ matrix.config.vcpkg_triplet }}
        shell: cmd

      - name: Build libgit2 with vcpkg
        run: |
          C:\vcpkg\vcpkg install --recurse libgit2 --triplet ${{ matrix.config.vcpkg_triplet }}
        shell: cmd

      - name: Upgrade any outdated vcpkg packages
        run: |
          C:\vcpkg\vcpkg upgrade --no-dry-run
        shell: cmd

      - name: Save packages of vcpkg
        id: save-vcpkg-sources
        uses: actions/cache/save@v4
        with:
          path: |
            C:\vcpkg\installed
          key: ${{ steps.cache-vcpkg-sources.outputs.cache-primary-key }}
          enableCrossOsArchive: false

      - name: Build hardened Fluent Bit packages
        run: |
          cmake -G "NMake Makefiles" `
            -DCMAKE_VERBOSE_MAKEFILE=On `
            -DOPENSSL_ROOT_DIR='C:\vcpkg\installed\${{ matrix.config.vcpkg_triplet }}' `
            ${{ matrix.config.cmake_additional_opt }} `
            -DFLB_LIBYAML_DIR='C:\vcpkg\installed\${{ matrix.config.vcpkg_triplet }}' `
            -DLIBGIT2_INCLUDE_DIR='C:\vcpkg\installed\${{ matrix.config.vcpkg_triplet }}\include' `
            -DLIBGIT2_LIBRARY='C:\vcpkg\installed\${{ matrix.config.vcpkg_triplet }}\lib\git2.lib' `
            -DFLUENTDO_AGENT_DISTRO=windows/${{ matrix.config.name }} `
            -DFLUENTDO_AGENT_PACKAGE_TYPE=PACKAGE `
            -DFLB_IN_CALYPTIA_FLEET=Off `
            -DFLB_IN_DOCKER=Off `
            -DFLB_IN_DOCKER_EVENTS=Off `
            -DFLB_IN_EXEC_WASI=Off `
            -DFLB_IN_MQTT=Off `
            -DFLB_IN_NETIF=Off `
            -DFLB_IN_NGINX_EXPORTER_METRICS=Off `
            -DFLB_IN_SERIAL=Off `
            -DFLB_IN_THERMAL=Off `
            -DFLB_FILTER_ALTER_SIZE=Off `
            -DFLB_FILTER_CHECKLIST=Off `
            -DFLB_FILTER_GEOIP2=Off `
            -DFLB_FILTER_NIGHTFALL=Off `
            -DFLB_FILTER_WASM=Off `
            -DFLB_OUT_CALYPTIA=Off `
            -DFLB_OUT_LOGDNA=Off `
            -DFLB_OUT_PGSQL=Off `
            -DFLB_OUT_TD=Off `
            -DFLB_OUT_VIVO_EXPORTER=Off `
            -DFLB_STREAM_PROCESSOR=Off `
            -DFLB_WASM=Off `
            -DFLB_ZIG=Off `
            -DFLB_PROXY_GO=Off `
            -DFLB_SHARED_LIB=Off `
            -DFLB_EXAMPLES=Off `
            -DFLB_RELEASE=On `
            -DFLB_SIMD=On `
            -DFLB_TRACE=Off `
            -DFLB_CHUNK_TRACE=Off `
            ../
          cmake --build .
          cpack
        working-directory: source/build

      - name: Upload build packages
        uses: actions/upload-artifact@v4
        with:
          name: package-windows-${{ matrix.config.arch }}
          path: |
            source/build/fluentdo-agent-*.exe
            source/build/fluentdo-agent-*.msi
            source/build/fluentdo-agent-*.zip
          if-no-files-found: error
