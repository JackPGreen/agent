# syntax=docker/dockerfile:1
# check=skip=InvalidBaseImagePlatform

ARG RELEASE_VERSION=4.0.5

# For multi-arch builds - assumption is running on an AMD64 host
FROM multiarch/qemu-user-static:x86_64-arm AS qemu-arm32
FROM multiarch/qemu-user-static:x86_64-aarch64 AS qemu-arm64

FROM debian:bookworm-slim AS base-builder

COPY --from=qemu-arm32 /usr/bin/qemu-arm-static /usr/bin/
COPY --from=qemu-arm64 /usr/bin/qemu-aarch64-static /usr/bin/

ENV DEBIAN_FRONTEND=noninteractive

# hadolint ignore=DL3008
RUN echo "deb http://deb.debian.org/debian bookworm-backports main" >> /etc/apt/sources.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    ca-certificates \
    git \
    make \
    tar \
    libssl-dev \
    libcurl4-openssl-dev \
    libsasl2-dev \
    pkg-config \
    libsystemd-dev/bookworm-backports \
    zlib1g-dev \
    libpq-dev \
    flex \
    bison \
    libyaml-dev \
    && apt-get satisfy -y cmake "cmake (<< 4.0)" \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

FROM base-builder AS source-builder

# Fluent Bit version
ARG FLUENT_BIT_VERSION
ENV FLUENTBIT_VERSION=$FLUENT_BIT_VERSION
ARG FLB_NIGHTLY_BUILD
ENV FLB_NIGHTLY_BUILD=$FLB_NIGHTLY_BUILD

ARG FLUENTDO_AGENT_VERSION=25.9.4
ENV FLUENTDO_AGENT_VERSION=${FLUENTDO_AGENT_VERSION}

# Copy any local source files as needed
WORKDIR /source/
COPY source/ /source/

# Some components assume a git repository is present, so we create one otherwise it fails
RUN git init -q /source/ && \
    git config user.name "Fluent Do Agent Builder" && \
    git config user.email "info@fluent.do" && \
    git add -A && \
    git commit -q -a -m "Initial commit for Fluent Do Agent"

# Install and create all necessary directories
RUN mkdir -p /fluent-bit/bin /fluent-bit/etc /fluent-bit/log /opt/fluent-do-agent/etc/
COPY source/conf/ /fluent-bit/etc/
COPY source/conf/ /opt/fluent-do-agent/etc/
COPY config/ /fluent-bit/etc/
COPY config/ /opt/fluent-do-agent/etc/

# Separate layers now for configure and build to allow local caching
FROM source-builder AS builder

WORKDIR /source/build/

ARG CMAKE_EXTRA_ARGS
ENV CMAKE_EXTRA_ARGS=${CMAKE_EXTRA_ARGS}

# We do not want word splitting for CMAKE_EXTRA_ARGS in case multiple are defined
# hadolint ignore=SC2086
RUN cmake -DCMAKE_BUILD_TYPE=Release \
    -DFLB_RELEASE=On \
    -DFLB_TESTS_INTERNAL=Off \
    -DFLB_TESTS_RUNTIME=Off \
    -DFLB_NIGHTLY_BUILD="$FLB_NIGHTLY_BUILD" \
    -DFLUENTDO_AGENT_VERSION="$FLUENTDO_AGENT_VERSION" \
    -DFLB_LOG_NO_CONTROL_CHARS=On \
    -DFLB_CORO_STACK_SIZE=131072 \
    ${CMAKE_EXTRA_ARGS} \
    ..

# Build and install, also copy to OSS default to make migration simple
ARG MAKE_EXTRA_ARGS
ENV MAKE_EXTRA_ARGS=${MAKE_EXTRA_ARGS}

RUN [ -n "$MAKE_EXTRA_ARGS" ] && make ${MAKE_EXTRA_ARGS} || make -j "$(getconf _NPROCESSORS_ONLN)" && \
    strip bin/fluent-bit && \
    install bin/fluent-bit /fluent-bit/bin/ && \
    install bin/fluent-bit /fluent-bit/bin/fluent-bit

# Generate schema and include as part of the container image
RUN /fluent-bit/bin/fluent-bit -J > /fluent-bit/etc/schema.json && \
    cp -f /fluent-bit/etc/schema.json /opt/fluent-do-agent/etc/schema.json

# Simple example of how to properly extract packages for reuse in distroless
# Taken from: https://github.com/GoogleContainerTools/distroless/issues/863
FROM debian:bookworm-slim AS deb-extractor
COPY --from=qemu-arm32 /usr/bin/qemu-arm-static /usr/bin/
COPY --from=qemu-arm64 /usr/bin/qemu-aarch64-static /usr/bin/

# We download all debs locally then extract them into a directory we can use as the root for distroless.
# We also include some extra handling for the status files that some tooling uses for scanning, etc.
WORKDIR /tmp
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN echo "deb http://deb.debian.org/debian bookworm-backports main" >> /etc/apt/sources.list && \
    apt-get update && \
    apt-get download \
    libssl3 \
    libcurl4 \
    libnghttp2-14 \
    librtmp1 \
    libssh2-1 \
    libpsl5 \
    libbrotli1 \
    libsasl2-2 \
    pkg-config \
    libsystemd0/bookworm-backports \
    zlib1g \
    ca-certificates \
    libatomic1 \
    libgcrypt20 \
    libzstd1 \
    liblz4-1 \
    libgssapi-krb5-2 \
    libldap-2.5 \
    libgpg-error0 \
    libkrb5-3 \
    libk5crypto3 \
    libcom-err2 \
    libkrb5support0 \
    libgnutls30 \
    libkeyutils1 \
    libp11-kit0 \
    libidn2-0 \
    libunistring2 \
    libtasn1-6 \
    libnettle8 \
    libhogweed6 \
    libgmp10 \
    libffi8 \
    liblzma5 \
    libyaml-0-2 \
    libcap2 \
    && \
    mkdir -p /dpkg/var/lib/dpkg/status.d/ && \
    for deb in *.deb; do \
    package_name=$(dpkg-deb -I "${deb}" | awk '/^ Package: .*$/ {print $2}'); \
    echo "Processing: ${package_name}"; \
    dpkg --ctrl-tarfile "$deb" | tar -Oxf - ./control > "/dpkg/var/lib/dpkg/status.d/${package_name}"; \
    dpkg --extract "$deb" /dpkg || exit 10; \
    done

# Remove unnecessary files extracted from deb packages like man pages and docs etc.
RUN find /dpkg/ -type d -empty -delete && \
    rm -r /dpkg/usr/share/doc/

# We want latest at time of build
# hadolint ignore=DL3006
FROM gcr.io/distroless/cc-debian12 AS production

ARG FLUENT_BIT_VERSION
ARG FLUENTDO_AGENT_VERSION

ENV FLUENTBIT_VERSION=$FLUENT_BIT_VERSION
ENV FLUENTDO_AGENT_VERSION=$FLUENTDO_AGENT_VERSION

EXPOSE 2020

ENTRYPOINT [ "/fluent-bit/bin/fluent-bit" ]
CMD [ "/fluent-bit/bin/fluent-bit", "-c", "/fluent-bit/etc/fluent-bit.conf" ]

# Ensure we add licensing and help information for certification requirements
COPY licenses/* /licenses/
COPY README.md /help.1

# Copy the libraries from the extractor stage into root
COPY --from=deb-extractor /dpkg /

# Copy certificates
COPY --from=builder /etc/ssl/certs /etc/ssl/certs

# Finally the binaries as most likely to change
COPY --from=builder /fluent-bit /fluent-bit
COPY --from=builder /opt/fluent-do-agent /opt/fluent-do-agent

# Debug image for development
FROM builder AS debug

ARG FLUENT_BIT_VERSION
ARG FLUENTDO_AGENT_VERSION

ENV FLUENTBIT_VERSION=$FLUENT_BIT_VERSION
ENV FLUENTDO_AGENT_VERSION=$FLUENTDO_AGENT_VERSION

ENTRYPOINT [ "bash" ]

COPY --from=qemu-arm32 /usr/bin/qemu-arm-static /usr/bin/
COPY --from=qemu-arm64 /usr/bin/qemu-aarch64-static /usr/bin/

ENV DEBIAN_FRONTEND=noninteractive

# hadolint ignore=DL3008
RUN echo "deb http://deb.debian.org/debian bookworm-backports main" >> /etc/apt/sources.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    bash gdb valgrind \
    git bash-completion vim tmux jq \
    dnsutils iputils-ping iputils-arping iputils-tracepath iputils-clockdiff \
    tcpdump curl nmap tcpflow iftop \
    net-tools mtr netcat-openbsd bridge-utils iperf ngrep \
    openssl \
    htop atop strace iotop sysstat ncdu logrotate hdparm pciutils psmisc tree pv \
    && apt-get satisfy -y cmake "cmake (<< 4.0)" \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

COPY --from=production /opt/fluent-do-agent /opt/fluent-do-agent
COPY --from=production /fluent-bit /fluent-bit
